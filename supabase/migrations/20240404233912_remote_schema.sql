
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

COMMENT ON SCHEMA "public" IS 'standard public schema';

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

CREATE TYPE "public"."issue" AS ENUM (
    'zoning',
    'taxes',
    'abortion',
    'housing'
);

ALTER TYPE "public"."issue" OWNER TO "postgres";

SET default_tablespace = '';

SET default_table_access_method = "heap";

-- CREATE TABLE IF NOT EXISTS "public"."issues" (
--     "id" bigint NOT NULL,
--     "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
--     "name" "text" NOT NULL,
--     "aliases" "text"[]
-- );

-- ALTER TABLE "public"."issues" OWNER TO "postgres";

-- ALTER TABLE "public"."issues" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
--     SEQUENCE NAME "public"."issues_id_seq"
--     START WITH 1
--     INCREMENT BY 1
--     NO MINVALUE
--     NO MAXVALUE
--     CACHE 1
-- );

CREATE TABLE IF NOT EXISTS "public"."officials" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "name" "text",
    "precinct" "text",
    "state" "text",
    "issues" "public"."issue"
);

ALTER TABLE "public"."officials" OWNER TO "postgres";

ALTER TABLE "public"."officials" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."officials_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."precincts" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "state" "text" NOT NULL,
    "precinct" bigint NOT NULL
);

ALTER TABLE "public"."precincts" OWNER TO "postgres";

ALTER TABLE "public"."precincts" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."precincts_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- ALTER TABLE ONLY "public"."issues"
--     ADD CONSTRAINT "issues_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."officials"
    ADD CONSTRAINT "officials_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."precincts"
    ADD CONSTRAINT "precincts_pkey" PRIMARY KEY ("id");

-- ALTER TABLE "public"."issues" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."officials" ENABLE ROW LEVEL SECURITY;

ALTER TABLE "public"."precincts" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

-- GRANT ALL ON TABLE "public"."issues" TO "anon";
-- GRANT ALL ON TABLE "public"."issues" TO "authenticated";
-- GRANT ALL ON TABLE "public"."issues" TO "service_role";

-- GRANT ALL ON SEQUENCE "public"."issues_id_seq" TO "anon";
-- GRANT ALL ON SEQUENCE "public"."issues_id_seq" TO "authenticated";
-- GRANT ALL ON SEQUENCE "public"."issues_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."officials" TO "anon";
GRANT ALL ON TABLE "public"."officials" TO "authenticated";
GRANT ALL ON TABLE "public"."officials" TO "service_role";

GRANT ALL ON SEQUENCE "public"."officials_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."officials_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."officials_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."precincts" TO "anon";
GRANT ALL ON TABLE "public"."precincts" TO "authenticated";
GRANT ALL ON TABLE "public"."precincts" TO "service_role";

GRANT ALL ON SEQUENCE "public"."precincts_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."precincts_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."precincts_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
